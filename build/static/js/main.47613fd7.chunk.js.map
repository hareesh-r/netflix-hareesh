{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchURL","isLarger","useState","movies","setMovies","trailerURL","setTrailerURL","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substring","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAAMA,G,YAAU,oCAcDC,EAXE,CACbC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,sCCLPU,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAU,iC,wCCyDCC,MAtDf,YAA8C,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAASC,EAAa,EAAbA,SAG5B,EAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAAqCF,mBAAS,IAA9C,mBAAOG,EAAP,KAAoBC,EAApB,KAgCA,OA9BAC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,sEAC0Bb,EAAMc,IAAIT,GADpC,cACUU,EADV,OAEIN,EAAUM,EAAQC,KAAKC,SAF3B,kBAGWF,GAHX,4CADU,uBAAC,WAAD,wBAMVG,KACF,CAACb,IAwBC,sBAAKc,UAAU,MAAf,UACI,mCAAOf,EAAP,OACA,qBAAKe,UAAU,eAAf,SAEQX,EAAOY,KAAI,SAAAC,GAAK,OACZ,qBACAC,QAAS,kBApBT,SAACD,GACbX,EACAC,EAAc,IAEdY,KAAmB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC5BC,MAAK,SAACC,GACH,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDnB,EAAcgB,EAAUb,IAAI,SAE/BiB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAWHG,CAAYd,IACVF,UAAS,sBAAiBb,GAAY,qBAAuB8B,IAAG,UA3ClF,wCA2CkF,OAAgB9B,EAAWe,EAAMgB,YAAchB,EAAMiB,eAAiBC,IAAKlB,EAAMG,MAA3JH,EAAMmB,SAItB9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAjCxC,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,U,MCmBLC,MAzCf,WACI,IAakBC,EAAKC,EAbvB,EAA0B1C,mBAAS,IAAnC,mBAAOc,EAAP,KAAc6B,EAAd,KAgBA,OAdAtC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEAC0Bb,EAAMc,IAAIxB,EAASE,uBAD7C,OACUuB,EADV,OAEImC,EAASnC,EAAQC,KAAKC,QAClBkC,KAAKC,MAAMD,KAAKE,SAAWtC,EAAQC,KAAKC,QAAQqC,OAAS,KAHjE,4CADY,uBAAC,WAAD,wBAOZpC,KACD,IAEHe,QAAQC,IAAIb,GAKR,yBAAQkC,MAAO,CACXC,eAAgB,QAChBC,gBAAgB,2CAAD,cAA6CpC,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAOiB,cAApD,KACfoB,mBAAoB,iBACrBvC,UAAU,SAJb,UAKI,sBAAKA,UAAU,mBAAf,UACI,oBAAIA,UAAU,gBAAd,UACU,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOjB,SAAP,OAAgBiB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAOG,QAAvB,OAA+BH,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAOsC,iBAE3C,sBAAKxC,UAAU,kBAAf,UACI,wBAAQA,UAAU,iBAAlB,kBAAgD,wBAAQA,UAAU,iBAAlB,wBAEpD,qBAAKA,UAAU,sBAAf,UAhBM6B,EAiBO,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAOuC,SAjBVX,EAiBoB,KAhB7B,OAAHD,QAAG,IAAHA,OAAA,EAAAA,EAAKM,QAASL,EAAID,EAAIa,UAAU,EAAGZ,EAAI,GAAK,MAAQD,QAmBvD,qBAAK7B,UAAU,2B,MCRZ2C,MA5Bf,WACI,MAAyBvD,mBAAS,IAAlC,mBAAOwD,EAAP,KAAcC,EAAd,KAeA,OAbApD,qBAAU,WASN,OARAqD,OAAOC,iBAAiB,UAAW,WAC5BD,OAAOE,QAAU,IAEhBH,GAAQ,GAERA,GAAQ,MAGT,WACHC,OAAOG,oBAAoB,aAEjC,IAEE,sBAAKjD,UAAS,cAAS4C,GAAQ,cAA/B,UACI,qBAAK5C,UAAU,YAAYiB,IAAI,mHAAmHG,IAAI,iBACtJ,qBACIpB,UAAU,cACViB,IAAI,+EACJG,IAAI,eCDL8B,MAjBf,WACE,OACE,sBAAKlD,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAKf,MAAM,oBAAoBC,SAAUf,EAASE,sBAAuBc,UAAQ,IACjF,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAUf,EAASC,gBAC7C,cAAC,EAAD,CAAKa,MAAM,YAAYC,SAAUf,EAASG,gBAC1C,cAAC,EAAD,CAAKW,MAAM,gBAAgBC,SAAUf,EAASI,oBAC9C,cAAC,EAAD,CAAKU,MAAM,gBAAgBC,SAAUf,EAASK,oBAC9C,cAAC,EAAD,CAAKS,MAAM,gBAAgBC,SAAUf,EAASM,oBAC9C,cAAC,EAAD,CAAKQ,MAAM,iBAAiBC,SAAUf,EAASO,qBAC/C,cAAC,EAAD,CAAKO,MAAM,gBAAgBC,SAAUf,EAASQ,yBCPrCwE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.47613fd7.chunk.js","sourcesContent":["const API_KEY = \"823d6d5799c182e6774be8fc6f1e1c6f\";\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n  };\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import axios from './axios';\r\nimport React, {useState,useEffect} from 'react'\r\nimport \"./Row.css\";\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row( { title, fetchURL,isLarger } ) {\r\n\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [movies , setMovies] = useState([]);\r\n\r\n    const [trailerURL , setTrailerURL] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchURL);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchURL]);\r\n\r\n    const opts = {\r\n        height: '390',\r\n        width: '100%',\r\n        playerVars: {\r\n          // https://developers.google.com/youtube/player_parameters\r\n          autoplay: 1,\r\n        },\r\n      };\r\n    const handleClick = (movie) => {\r\n        if (trailerURL) {\r\n            setTrailerURL(\"\");\r\n          } else {\r\n            movieTrailer( movie?.name || \"\")\r\n            .then((url)=>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerURL(urlParams.get('v'));\r\n            })\r\n            .catch((error)=>console.log(error));\r\n          }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2> { title } </h2>\r\n            <div className=\"row__posters\">\r\n                {\r\n                    movies.map(movie => (\r\n                        <img\r\n                        onClick={()=>handleClick(movie)}\r\n                        key={movie.id} className={`row__poster ${isLarger && \"row__posterLarger\"}`} src={`${base_url}${isLarger ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                    ))\r\n                }\r\n            </div>\r\n            {trailerURL && <YouTube videoId={trailerURL} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row","import React, { useState, useEffect } from 'react';\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n            ]);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log(movie);\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\r\n    }\r\n    return (\r\n        <header style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n            backgroundPosition: \"center center\"\r\n        }} className=\"banner\">\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button><button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <div className=\"banner__description\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </div>\r\n            </div>\r\n            <div className=\"banner--fadeBottom\">\r\n\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React , {useState , useEffect} from 'react'\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    const [show , setShow] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener(\"scroll\" , ()=>{\r\n            if(window.scrollY > 100)\r\n            {\r\n                setShow(true);\r\n            }else{\r\n                setShow(false);\r\n            }\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    },[]);\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img className=\"nav__logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix Logo\" />\r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n                alt=\"Avatar\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport requests from './requests';\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Originals\" fetchURL={requests.fetchNetflixOriginals} isLarger/>\n      <Row title=\"Trending Now\" fetchURL={requests.fetchTrending}/>\n      <Row title=\"Top Rated\" fetchURL={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchURL={requests.fetchActionMovies}/>\n      <Row title=\"Comedy Movies\" fetchURL={requests.fetchComedyMovies}/>\n      <Row title=\"Horror Movies\" fetchURL={requests.fetchHorrorMovies}/>\n      <Row title=\"Romance Movies\" fetchURL={requests.fetchRomanceMovies}/>\n      <Row title=\"Documentaries\" fetchURL={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}