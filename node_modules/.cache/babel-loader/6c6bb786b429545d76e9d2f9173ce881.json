{"ast":null,"code":"var _jsxFileName = \"D:\\\\LEARNING\\\\React JS\\\\Netflix\\\\netflix-clone\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport axios from './axios';\nimport React, { useState, useEffect } from 'react';\nimport \"./Row.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row({\n  title,\n  fetchURL,\n  isLarger\n}) {\n  _s();\n\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, [fetchURL]);\n  console.log(movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", title, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row__posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `row__poster ${isLarger && \"row__\"}`,\n        src: `${base_url}${isLarger ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"eVbSZgchb5sqBry+u181adB85X8=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["D:/LEARNING/React JS/Netflix/netflix-clone/src/Row.js"],"names":["axios","React","useState","useEffect","Row","title","fetchURL","isLarger","base_url","movies","setMovies","fetchData","request","get","data","results","console","log","map","movie","poster_path","backdrop_path","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,CAAc;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAkBC,EAAAA;AAAlB,CAAd,EAA6C;AAAA;;AAEzC,QAAMC,QAAQ,GAAG,sCAAjB;AACA,QAAM,CAACC,MAAD,EAAUC,SAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeQ,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUP,QAAV,CAAtB;AACAI,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAOP,CAACL,QAAD,CAPO,CAAT;AASAU,EAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAA,sBAAOJ,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAEQI,MAAM,CAACS,GAAP,CAAWC,KAAK,iBACZ;AACe,QAAA,SAAS,EAAG,eAAcZ,QAAQ,IAAI,OAAQ,EAD7D;AACgE,QAAA,GAAG,EAAG,GAAEC,QAAS,GAAED,QAAQ,GAAGY,KAAK,CAACC,WAAT,GAAuBD,KAAK,CAACE,aAAc,EADtI;AACyI,QAAA,GAAG,EAAEF,KAAK,CAACG;AADpJ,SACKH,KAAK,CAACI,EADX;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA7BQnB,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import axios from './axios';\r\nimport React, {useState,useEffect} from 'react'\r\nimport \"./Row.css\";\r\n\r\nfunction Row( { title, fetchURL,isLarger } ) {\r\n\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    const [movies , setMovies] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchURL);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[fetchURL]);\r\n\r\n    console.log(movies);\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2> { title } </h2>\r\n            <div className=\"row__posters\">\r\n                {\r\n                    movies.map(movie => (\r\n                        <img\r\n                        key={movie.id} className={`row__poster ${isLarger && \"row__\"}`} src={`${base_url}${isLarger ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}